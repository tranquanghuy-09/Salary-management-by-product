/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import dao.NhanVienDao;
import dao.TaiKhoanDao;
import entity.NhanVien;
import entity.TaiKhoan;
import helper.MaNguoiDung;
import helper.TenNguoiDung;
import java.awt.BorderLayout;
import java.awt.event.ItemEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.regex.Pattern;

/**
 *
 * @author huylauri
 */
public class FrmDangNhapDangKy extends javax.swing.JFrame {

    private TaiKhoanDao taiKhoanDao = new TaiKhoanDao();
    private NhanVienDao nhanVienDao = new NhanVienDao();

    /**
     * Creates new form NewJFrame
     */
    public FrmDangNhapDangKy() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public void xoaRongDangKyTK() {
        txtTenTaiKhoan_DK.setText("Nhập mã nhân viên");
        pwdNhapMatKhau_DK.setText("");
        pwdNhapLaiMatKhau_DK.setText("");
    }

    public boolean kiemTraMatKhau(String password) {
        // Kiểm tra độ dài ít nhất 8 kí tự
        if (password.length() < 8) {
            return false;
        }
        // Kiểm tra chứa ít nhất một chữ hoa
        if (!Pattern.compile("[A-Z]").matcher(password).find()) {
            return false;
        }
        // Kiểm tra chứa ít nhất một chữ số
        if (!Pattern.compile("\\d").matcher(password).find()) {
            return false;
        }
        // Kiểm tra chứa ít nhất một kí tự đặc biệt
        if (!Pattern.compile("[!@#$%^&*()-+=.]").matcher(password).find()) {
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDangKyTaiKhoan = new javax.swing.JPanel();
        lblTieuDe_DK = new javax.swing.JLabel();
        txtTenTaiKhoan_DK = new javax.swing.JTextField();
        lblTenTaiKhoan_DK = new javax.swing.JLabel();
        pwdNhapMatKhau_DK = new javax.swing.JPasswordField();
        chkHienThiMatKhau_DK = new javax.swing.JCheckBox();
        btnDangKy_DK = new javax.swing.JButton();
        lblNhapMatKhau_DK = new javax.swing.JLabel();
        pwdNhapLaiMatKhau_DK = new javax.swing.JPasswordField();
        lblNhapLaiMatKhau_DK = new javax.swing.JLabel();
        btnDangNhap_DK = new javax.swing.JButton();
        pnlMain = new javax.swing.JPanel();
        pnlLeft = new javax.swing.JPanel();
        btnLogo = new javax.swing.JButton();
        pnlRight = new javax.swing.JPanel();
        pnlDangNhap = new javax.swing.JPanel();
        lblTieuDe = new javax.swing.JLabel();
        pwdMatKhau = new javax.swing.JPasswordField();
        txtTenDangNhap = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        lblTenDangNhap = new javax.swing.JLabel();
        lblMatKhau = new javax.swing.JLabel();
        chkHienThiMatKhau = new javax.swing.JCheckBox();
        btnDangNhap = new javax.swing.JButton();
        btnDangKyTaiKhoan = new javax.swing.JButton();

        pnlDangKyTaiKhoan.setBackground(new java.awt.Color(0, 169, 187));
        pnlDangKyTaiKhoan.setPreferredSize(new java.awt.Dimension(400, 400));

        lblTieuDe_DK.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        lblTieuDe_DK.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDe_DK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTieuDe_DK.setText("ĐĂNG KÝ TÀI KHOẢN");

        txtTenTaiKhoan_DK.setBackground(new java.awt.Color(0, 169, 187));
        txtTenTaiKhoan_DK.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtTenTaiKhoan_DK.setForeground(new java.awt.Color(255, 255, 255));
        txtTenTaiKhoan_DK.setText("Nhập mã nhân viên");
        txtTenTaiKhoan_DK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        txtTenTaiKhoan_DK.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenTaiKhoan_DKFocusGained(evt);
            }
        });
        txtTenTaiKhoan_DK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenTaiKhoan_DKActionPerformed(evt);
            }
        });

        lblTenTaiKhoan_DK.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTenTaiKhoan_DK.setForeground(new java.awt.Color(255, 255, 255));
        lblTenTaiKhoan_DK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenTaiKhoan_DK.setText("Tên tài khoản:");

        pwdNhapMatKhau_DK.setBackground(new java.awt.Color(0, 169, 187));
        pwdNhapMatKhau_DK.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        pwdNhapMatKhau_DK.setForeground(new java.awt.Color(255, 255, 255));
        pwdNhapMatKhau_DK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        pwdNhapMatKhau_DK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdNhapMatKhau_DKActionPerformed(evt);
            }
        });

        chkHienThiMatKhau_DK.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkHienThiMatKhau_DK.setForeground(new java.awt.Color(255, 255, 255));
        chkHienThiMatKhau_DK.setText("Hiển thị mật khẩu");
        chkHienThiMatKhau_DK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkHienThiMatKhau_DKItemStateChanged(evt);
            }
        });

        btnDangKy_DK.setBackground(new java.awt.Color(0, 169, 187));
        btnDangKy_DK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDangKy_DK.setForeground(new java.awt.Color(255, 255, 255));
        btnDangKy_DK.setText("Đăng ký");
        btnDangKy_DK.setBorder(null);
        btnDangKy_DK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKy_DKActionPerformed(evt);
            }
        });

        lblNhapMatKhau_DK.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNhapMatKhau_DK.setForeground(new java.awt.Color(255, 255, 255));
        lblNhapMatKhau_DK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNhapMatKhau_DK.setText("Nhập mật khẩu:");

        pwdNhapLaiMatKhau_DK.setBackground(new java.awt.Color(0, 169, 187));
        pwdNhapLaiMatKhau_DK.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        pwdNhapLaiMatKhau_DK.setForeground(new java.awt.Color(255, 255, 255));
        pwdNhapLaiMatKhau_DK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        lblNhapLaiMatKhau_DK.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNhapLaiMatKhau_DK.setForeground(new java.awt.Color(255, 255, 255));
        lblNhapLaiMatKhau_DK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNhapLaiMatKhau_DK.setText("Nhập lại mật khẩu:");

        btnDangNhap_DK.setBackground(new java.awt.Color(0, 169, 187));
        btnDangNhap_DK.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDangNhap_DK.setForeground(new java.awt.Color(255, 255, 255));
        btnDangNhap_DK.setText("Đăng nhập");
        btnDangNhap_DK.setBorder(null);
        btnDangNhap_DK.setBorderPainted(false);
        btnDangNhap_DK.setContentAreaFilled(false);
        btnDangNhap_DK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDangNhap_DK.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        btnDangNhap_DK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhap_DKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDangKyTaiKhoanLayout = new javax.swing.GroupLayout(pnlDangKyTaiKhoan);
        pnlDangKyTaiKhoan.setLayout(pnlDangKyTaiKhoanLayout);
        pnlDangKyTaiKhoanLayout.setHorizontalGroup(
            pnlDangKyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTieuDe_DK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlDangKyTaiKhoanLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(pnlDangKyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNhapLaiMatKhau_DK)
                    .addComponent(lblTenTaiKhoan_DK)
                    .addGroup(pnlDangKyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pwdNhapMatKhau_DK)
                        .addGroup(pnlDangKyTaiKhoanLayout.createSequentialGroup()
                            .addComponent(btnDangNhap_DK)
                            .addGap(62, 62, 62)
                            .addComponent(chkHienThiMatKhau_DK))
                        .addComponent(txtTenTaiKhoan_DK)
                        .addComponent(pwdNhapLaiMatKhau_DK))
                    .addComponent(lblNhapMatKhau_DK))
                .addGap(80, 80, 80))
            .addGroup(pnlDangKyTaiKhoanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDangKy_DK, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDangKyTaiKhoanLayout.setVerticalGroup(
            pnlDangKyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDangKyTaiKhoanLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(lblTieuDe_DK, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(lblTenTaiKhoan_DK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTenTaiKhoan_DK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNhapMatKhau_DK)
                .addGap(3, 3, 3)
                .addComponent(pwdNhapMatKhau_DK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNhapLaiMatKhau_DK)
                .addGap(3, 3, 3)
                .addComponent(pwdNhapLaiMatKhau_DK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(pnlDangKyTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkHienThiMatKhau_DK)
                    .addComponent(btnDangNhap_DK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDangKy_DK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlLeft.setBackground(new java.awt.Color(255, 191, 85));

        btnLogo.setBackground(new java.awt.Color(255, 191, 84));
        btnLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/logo2.jpg"))); // NOI18N
        btnLogo.setBorder(null);
        btnLogo.setBorderPainted(false);
        btnLogo.setContentAreaFilled(false);

        javax.swing.GroupLayout pnlLeftLayout = new javax.swing.GroupLayout(pnlLeft);
        pnlLeft.setLayout(pnlLeftLayout);
        pnlLeftLayout.setHorizontalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLeftLayout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addComponent(btnLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
        pnlLeftLayout.setVerticalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLeftLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlRight.setBackground(new java.awt.Color(0, 169, 187));
        pnlRight.setPreferredSize(new java.awt.Dimension(400, 400));

        pnlDangNhap.setBackground(new java.awt.Color(0, 169, 187));
        pnlDangNhap.setPreferredSize(new java.awt.Dimension(400, 400));

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(255, 255, 255));
        lblTieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTieuDe.setText("ĐĂNG NHẬP");

        pwdMatKhau.setBackground(new java.awt.Color(0, 169, 187));
        pwdMatKhau.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        pwdMatKhau.setForeground(new java.awt.Color(255, 255, 255));
        pwdMatKhau.setText("Mật khẩu");
        pwdMatKhau.setBorder(null);
        pwdMatKhau.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pwdMatKhauFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pwdMatKhauFocusLost(evt);
            }
        });
        pwdMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdMatKhauActionPerformed(evt);
            }
        });

        txtTenDangNhap.setBackground(new java.awt.Color(0, 169, 187));
        txtTenDangNhap.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtTenDangNhap.setForeground(new java.awt.Color(255, 255, 255));
        txtTenDangNhap.setText("Tên đăng nhập");
        txtTenDangNhap.setBorder(null);
        txtTenDangNhap.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenDangNhapFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenDangNhapFocusLost(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));

        lblTenDangNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenDangNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/user2.png"))); // NOI18N

        lblMatKhau.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMatKhau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/Images/password2.png"))); // NOI18N

        chkHienThiMatKhau.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkHienThiMatKhau.setForeground(new java.awt.Color(255, 255, 255));
        chkHienThiMatKhau.setText("Hiển thị mật khẩu");
        chkHienThiMatKhau.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkHienThiMatKhauItemStateChanged(evt);
            }
        });
        chkHienThiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkHienThiMatKhauActionPerformed(evt);
            }
        });

        btnDangNhap.setBackground(new java.awt.Color(0, 169, 187));
        btnDangNhap.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDangNhap.setForeground(new java.awt.Color(255, 255, 255));
        btnDangNhap.setText("Đăng nhập");
        btnDangNhap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnDangNhap.setContentAreaFilled(false);
        btnDangNhap.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });

        btnDangKyTaiKhoan.setBackground(new java.awt.Color(0, 169, 187));
        btnDangKyTaiKhoan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDangKyTaiKhoan.setForeground(new java.awt.Color(255, 255, 255));
        btnDangKyTaiKhoan.setText("Đăng ký tài khoản");
        btnDangKyTaiKhoan.setBorder(null);
        btnDangKyTaiKhoan.setContentAreaFilled(false);
        btnDangKyTaiKhoan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDangKyTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKyTaiKhoanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDangNhapLayout = new javax.swing.GroupLayout(pnlDangNhap);
        pnlDangNhap.setLayout(pnlDangNhapLayout);
        pnlDangNhapLayout.setHorizontalGroup(
            pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlDangNhapLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlDangNhapLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnDangKyTaiKhoan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(chkHienThiMatKhau))
                    .addGroup(pnlDangNhapLayout.createSequentialGroup()
                        .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTenDangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pwdMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(txtTenDangNhap)
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2))))
                .addContainerGap(53, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDangNhapLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDangNhapLayout.setVerticalGroup(
            pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDangNhapLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDangNhapLayout.createSequentialGroup()
                        .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTenDangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDangNhapLayout.createSequentialGroup()
                        .addComponent(pwdMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkHienThiMatKhau)
                    .addComponent(btnDangKyTaiKhoan))
                .addGap(30, 30, 30)
                .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlRightLayout = new javax.swing.GroupLayout(pnlRight);
        pnlRight.setLayout(pnlRightLayout);
        pnlRightLayout.setHorizontalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlRightLayout.setVerticalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(pnlLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlRight, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkHienThiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkHienThiMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkHienThiMatKhauActionPerformed

    private void btnDangKyTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKyTaiKhoanActionPerformed
        pnlRight.removeAll();

        pnlRight.setLayout(new BorderLayout());
        pnlRight.add(pnlDangKyTaiKhoan);

        pnlRight.validate();
        pnlRight.repaint();
    }//GEN-LAST:event_btnDangKyTaiKhoanActionPerformed

    private void txtTenDangNhapFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenDangNhapFocusGained
        txtTenDangNhap.setText("");
    }//GEN-LAST:event_txtTenDangNhapFocusGained

    private void txtTenDangNhapFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenDangNhapFocusLost
        if (txtTenDangNhap.getText() == null) {
            txtTenDangNhap.setText("Tên đăng nhập");
        }
    }//GEN-LAST:event_txtTenDangNhapFocusLost

    private void pwdMatKhauFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pwdMatKhauFocusGained
        pwdMatKhau.setText("");
    }//GEN-LAST:event_pwdMatKhauFocusGained

    private void pwdMatKhauFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pwdMatKhauFocusLost
        if (pwdMatKhau.getPassword() == null) {
            pwdMatKhau.setText("Nhập mật khẩu");
        }
    }//GEN-LAST:event_pwdMatKhauFocusLost

    private void chkHienThiMatKhauItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkHienThiMatKhauItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            pwdMatKhau.setEchoChar((char) 0);
        } else {
            pwdMatKhau.setEchoChar('*');
        }
    }//GEN-LAST:event_chkHienThiMatKhauItemStateChanged

    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed

        try {
            String maNhanVien = txtTenDangNhap.getText();
            char[] matKhau = pwdMatKhau.getPassword();
            String matKhauString = new String(matKhau);
            if (taiKhoanDao.kiemTraTaiKhoanTonTai(maNhanVien)) {
                TaiKhoan tk = taiKhoanDao.layTaiKhoanTheoMaNV(maNhanVien);
                if (tk.getMatKhau().equals(matKhauString)) {
                    NhanVien nv = nhanVienDao.layNVTheoMa(maNhanVien);

                    TenNguoiDung nguoiDung = new TenNguoiDung();
                    MaNguoiDung maNguoiDung = new MaNguoiDung();
                    nguoiDung.setTenNguoiDung(nv.getTenNhanVien());
                    maNguoiDung.setMaNguoiDung(nv.getMaNhanVien());

                    this.dispose();
                    TrangChu_GUI trangChu_GUI = new TrangChu_GUI();
                    trangChu_GUI.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Mật khẩu sai!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Tài khoản không tồn tại!");
            }

//            TenNguoiDung nguoiDung = new TenNguoiDung();
//            nguoiDung.setTenNguoiDung(txtTenDangNhap.getText());
//            this.dispose();
//            TrangChu_GUI trangChu_GUI = new TrangChu_GUI();
//            trangChu_GUI.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmDangNhapDangKy.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnDangNhapActionPerformed

    private void txtTenTaiKhoan_DKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenTaiKhoan_DKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenTaiKhoan_DKActionPerformed

    private void pwdNhapMatKhau_DKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdNhapMatKhau_DKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdNhapMatKhau_DKActionPerformed

    private void btnDangKy_DKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKy_DKActionPerformed
        String maNhanVien = txtTenTaiKhoan_DK.getText();
        char[] matKhau = pwdNhapMatKhau_DK.getPassword();
        char[] maKhauNhapLai = pwdNhapLaiMatKhau_DK.getPassword();
        String matKhauString = new String(matKhau);
        String matKhauNhapLaiString = new String(maKhauNhapLai);
        try {
            if (nhanVienDao.layNVTheoMa(maNhanVien) != null) {
                if (!taiKhoanDao.kiemTraTaiKhoanTonTai(maNhanVien)) {
                    if (kiemTraMatKhau(matKhauString)) {
                        if (matKhauString.equals(matKhauNhapLaiString)) {
                            taiKhoanDao.themTaiKhoan(maNhanVien, matKhauString);
                            JOptionPane.showMessageDialog(this, "Đăng ký tài khoản thành công.");
                            xoaRongDangKyTK();
                        } else {
                            JOptionPane.showMessageDialog(this, "Các mật khẩu đã nhập không khớp. Hãy thử lại.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Mật khẩu phải ít nhất 8 kí tự, có chứa chữ cái in hoa, số và ký tự đặc biệt!");
                    }
                } else {
                    txtTenTaiKhoan_DK.setText("Nhập mã nhân viên");
                    JOptionPane.showMessageDialog(this, "Tài khoản này đã tồn tại");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Mã nhân viên không tồn tại!");
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmDangNhapDangKy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDangKy_DKActionPerformed

    private void btnDangNhap_DKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhap_DKActionPerformed
        pnlRight.removeAll();

        pnlRight.setLayout(new BorderLayout());
        pnlRight.add(pnlDangNhap);

        pnlRight.validate();
        pnlRight.repaint();
    }//GEN-LAST:event_btnDangNhap_DKActionPerformed

    private void txtTenTaiKhoan_DKFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenTaiKhoan_DKFocusGained
        txtTenTaiKhoan_DK.setText("");
    }//GEN-LAST:event_txtTenTaiKhoan_DKFocusGained

    private void chkHienThiMatKhau_DKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkHienThiMatKhau_DKItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            pwdNhapMatKhau_DK.setEchoChar((char) 0);
            pwdNhapLaiMatKhau_DK.setEchoChar((char) 0);
        } else {
            pwdNhapMatKhau_DK.setEchoChar('*');
            pwdNhapLaiMatKhau_DK.setEchoChar('*');
        }
    }//GEN-LAST:event_chkHienThiMatKhau_DKItemStateChanged

    private void pwdMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdMatKhauActionPerformed
        try {
            String maNhanVien = txtTenDangNhap.getText();
            char[] matKhau = pwdMatKhau.getPassword();
            String matKhauString = new String(matKhau);
            if (taiKhoanDao.kiemTraTaiKhoanTonTai(maNhanVien)) {
                TaiKhoan tk = taiKhoanDao.layTaiKhoanTheoMaNV(maNhanVien);
                if (tk.getMatKhau().equals(matKhauString)) {
                    NhanVien nv = nhanVienDao.layNVTheoMa(maNhanVien);

                    TenNguoiDung nguoiDung = new TenNguoiDung();
                    MaNguoiDung maNguoiDung = new MaNguoiDung();
                    nguoiDung.setTenNguoiDung(nv.getTenNhanVien());
                    maNguoiDung.setMaNguoiDung(nv.getMaNhanVien());

                    this.dispose();
                    TrangChu_GUI trangChu_GUI = new TrangChu_GUI();
                    trangChu_GUI.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Mật khẩu sai!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Tài khoản không tồn tại!");
            }

//            TenNguoiDung nguoiDung = new TenNguoiDung();
//            nguoiDung.setTenNguoiDung(txtTenDangNhap.getText());
//            this.dispose();
//            TrangChu_GUI trangChu_GUI = new TrangChu_GUI();
//            trangChu_GUI.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(FrmDangNhapDangKy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pwdMatKhauActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhapDangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhapDangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhapDangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhapDangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDangNhapDangKy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKyTaiKhoan;
    private javax.swing.JButton btnDangKy_DK;
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JButton btnDangNhap_DK;
    private javax.swing.JButton btnLogo;
    private javax.swing.JCheckBox chkHienThiMatKhau;
    private javax.swing.JCheckBox chkHienThiMatKhau_DK;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblNhapLaiMatKhau_DK;
    private javax.swing.JLabel lblNhapMatKhau_DK;
    private javax.swing.JLabel lblTenDangNhap;
    private javax.swing.JLabel lblTenTaiKhoan_DK;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblTieuDe_DK;
    private javax.swing.JPanel pnlDangKyTaiKhoan;
    private javax.swing.JPanel pnlDangNhap;
    private javax.swing.JPanel pnlLeft;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlRight;
    private javax.swing.JPasswordField pwdMatKhau;
    private javax.swing.JPasswordField pwdNhapLaiMatKhau_DK;
    private javax.swing.JPasswordField pwdNhapMatKhau_DK;
    private javax.swing.JTextField txtTenDangNhap;
    private javax.swing.JTextField txtTenTaiKhoan_DK;
    // End of variables declaration//GEN-END:variables
}
